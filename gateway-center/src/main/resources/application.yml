eureka:
  instance:
    # 每隔5s发送一次心跳
    lease-renewal-interval-in-seconds: 5
    # 告知服务端10秒还未收到心跳的话，就将该服务移除列表
    lease-expiration-duration-in-seconds: 10
    # 健康检查路径
    health-check-url-path: /actuator/health
  client:
    registry-fetch-interval-seconds: 5 # 默认为30秒
    serviceUrl:
      #eureka注册中心地址
      defaultZone: http://localhost:8888/eureka/
      #defaultZone: http://localhost:8888/eureka/,http://localhost:8889/eureka/,http://localhost:8890/eureka/

# Admin 管理配置
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

server:
  #项目端口号
  port: 5010
  tomcat:
    max-connections: 200
    max-threads: 300
    min-spare-threads: 0
    uri-encoding: UTF-8

spring:
  application:
    #服务名称,随便写
    name: gateway-center
  cloud:
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能
          enabled: true
          #使用小写服务名，默认是大写
          lower-case-service-id: true
      routes:
        # 路由的ID
        - id: path_route
          # uri 代表路由的目标地址。注意：uri地址后面不要加 " / "
          # 消息必须使用http进行转发，lb代表从注册中心获取服务
          uri: lb://gateway-center # 可以直接跳转到具体的地址，如果要跳转到其他服务，则填写lb://<服务id>
          predicates:
            - Path=/gateway/** # 路由规则
          filters:
            - StripPrefix=1 # 不填则无法路由到其他服务
            - Pre # 自定义过滤器
            - Post # 自定义过滤器
            # - AddRequestHeader=X-Request-Foo, Bar
            - name: Hystrix # 添加熔断
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallbacks # 熔断跳转地址
            #- name: RequestRateLimiter
                #args:
                  # 每秒允许处理的请求数量
                  #redis-rate-limiter.replenishRate: 1 #  令牌桶每秒填充平均速率
                  # 每秒最大处理的请求数量
                  #redis-rate-limiter.burstCapacity: 3 # 令牌桶总容量
                  # 限流策略，对应策略的Bean
                  #key-resolver: "#{@ipKeyResolver}"
  #redis:
    #host: 127.0.0.1
      #port: root
      #password: 123456

hystrix:
  metrics:
    enabled: true
    polling-interval-ms: 3000


logging:
  pattern:
    console: "%d - %msg%n"
  #path: D:\Logback-Test\             #日志输出到指定文件夹下默认名为spring.log
  file: D:\Logback-Test\wordimg.log  #日志输出到指定文件
  #level: debug   #指定级别
  level:         #指定输出某个类的日志
    com.cnooc.wordimg.LoggerTest2: debug

#security:
#  oauth2:
#    resource:
#      ####从认证授权中心上验证token
#      tokenInfoUri: http://localhost:3010/serve-oauth/oauth/check_token
#      preferTokenInfo: true
#    client:
#      accessTokenUri: http://localhost:3010/serve-oauth/oauth/token
#      userAuthorizationUri: http://localhost:3010/serve-oauth/oauth/authorize
#      clientId: client_1
#      clientSecret: 123456


